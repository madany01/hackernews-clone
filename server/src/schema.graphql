enum Sort {
  asc
  desc
}

input FeedSort {
  description: Sort
  createdAt: Sort
}

type Query {
  info: String!
  feed(filter: String, skip: Int, take: Int, sort: FeedSort): Feed!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): User
  login(email: String!, password: String!): Token
  post(url: String!, description: String!): Link!
  vote(linkId: ID!): Vote
}

type Subscription {
  linkAdded: Link!
  voteAdded: Vote!
}

type Feed {
  links: [Link!]!
  count: Int!
}

type User {
  id: ID!
  email: String!
  name: String!
  links: [Link!]!
  votes: [Vote]!
}

type Link {
  id: ID!
  url: String!
  description: String!
  author: User!
  votes: [Vote]!
}

type Vote {
  id: ID!
  user: User!
  link: Link!
}

type Token {
  value: String
}
